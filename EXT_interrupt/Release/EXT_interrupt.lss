
EXT_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  0000036a  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
  74:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <LCD_SEND_COMMAND_4bit>:
  7c:	ae 98       	cbi	0x15, 6	; 21
  7e:	af 9a       	sbi	0x15, 7	; 21
  80:	40 e1       	ldi	r20, 0x10	; 16
  82:	57 e2       	ldi	r21, 0x27	; 39
  84:	fa 01       	movw	r30, r20
  86:	31 97       	sbiw	r30, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <LCD_SEND_COMMAND_4bit+0xa>
  8a:	28 2f       	mov	r18, r24
  8c:	20 7f       	andi	r18, 0xF0	; 240
  8e:	28 bb       	out	0x18, r18	; 24
  90:	fa 01       	movw	r30, r20
  92:	31 97       	sbiw	r30, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <LCD_SEND_COMMAND_4bit+0x16>
  96:	af 98       	cbi	0x15, 7	; 21
  98:	fa 01       	movw	r30, r20
  9a:	31 97       	sbiw	r30, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <LCD_SEND_COMMAND_4bit+0x1e>
  9e:	af 9a       	sbi	0x15, 7	; 21
  a0:	fa 01       	movw	r30, r20
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <LCD_SEND_COMMAND_4bit+0x26>
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	24 e0       	ldi	r18, 0x04	; 4
  aa:	88 0f       	add	r24, r24
  ac:	99 1f       	adc	r25, r25
  ae:	2a 95       	dec	r18
  b0:	e1 f7       	brne	.-8      	; 0xaa <LCD_SEND_COMMAND_4bit+0x2e>
  b2:	88 bb       	out	0x18, r24	; 24
  b4:	af 98       	cbi	0x15, 7	; 21
  b6:	08 95       	ret

000000b8 <LCD_CLEAR>:
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_SEND_COMMAND_4bit>
  be:	08 95       	ret

000000c0 <LCD_INIT>:
  c0:	87 b3       	in	r24, 0x17	; 23
  c2:	80 6f       	ori	r24, 0xF0	; 240
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	84 b3       	in	r24, 0x14	; 20
  c8:	80 6c       	ori	r24, 0xC0	; 192
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	88 e2       	ldi	r24, 0x28	; 40
  ce:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_SEND_COMMAND_4bit>
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_SEND_COMMAND_4bit>
  d8:	8f e0       	ldi	r24, 0x0F	; 15
  da:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_SEND_COMMAND_4bit>
  de:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_CLEAR>
  e2:	08 95       	ret

000000e4 <LCD_SEND_CHAR_4bit>:
  e4:	ae 9a       	sbi	0x15, 6	; 21
  e6:	af 9a       	sbi	0x15, 7	; 21
  e8:	40 e1       	ldi	r20, 0x10	; 16
  ea:	57 e2       	ldi	r21, 0x27	; 39
  ec:	fa 01       	movw	r30, r20
  ee:	31 97       	sbiw	r30, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <LCD_SEND_CHAR_4bit+0xa>
  f2:	28 2f       	mov	r18, r24
  f4:	20 7f       	andi	r18, 0xF0	; 240
  f6:	28 bb       	out	0x18, r18	; 24
  f8:	fa 01       	movw	r30, r20
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_SEND_CHAR_4bit+0x16>
  fe:	af 98       	cbi	0x15, 7	; 21
 100:	fa 01       	movw	r30, r20
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_SEND_CHAR_4bit+0x1e>
 106:	af 9a       	sbi	0x15, 7	; 21
 108:	fa 01       	movw	r30, r20
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <LCD_SEND_CHAR_4bit+0x26>
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	34 e0       	ldi	r19, 0x04	; 4
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	3a 95       	dec	r19
 118:	e1 f7       	brne	.-8      	; 0x112 <LCD_SEND_CHAR_4bit+0x2e>
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	af 98       	cbi	0x15, 7	; 21
 11e:	08 95       	ret

00000120 <LCD_SEND_string_4bit>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ec 01       	movw	r28, r24
 126:	02 c0       	rjmp	.+4      	; 0x12c <LCD_SEND_string_4bit+0xc>
 128:	0e 94 72 00 	call	0xe4	; 0xe4 <LCD_SEND_CHAR_4bit>
 12c:	89 91       	ld	r24, Y+
 12e:	88 23       	and	r24, r24
 130:	d9 f7       	brne	.-10     	; 0x128 <LCD_SEND_string_4bit+0x8>
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	08 95       	ret

00000138 <LCD_set_cursor_4bit>:
 138:	88 23       	and	r24, r24
 13a:	11 f4       	brne	.+4      	; 0x140 <LCD_set_cursor_4bit+0x8>
 13c:	80 e8       	ldi	r24, 0x80	; 128
 13e:	05 c0       	rjmp	.+10     	; 0x14a <LCD_set_cursor_4bit+0x12>
 140:	81 30       	cpi	r24, 0x01	; 1
 142:	11 f4       	brne	.+4      	; 0x148 <LCD_set_cursor_4bit+0x10>
 144:	80 ec       	ldi	r24, 0xC0	; 192
 146:	01 c0       	rjmp	.+2      	; 0x14a <LCD_set_cursor_4bit+0x12>
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	86 2b       	or	r24, r22
 14c:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_SEND_COMMAND_4bit>
 150:	08 95       	ret

00000152 <LCD_send_string_row_column_4bit>:
 152:	0f 93       	push	r16
 154:	1f 93       	push	r17
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	14 2f       	mov	r17, r20
 15c:	05 2f       	mov	r16, r21
 15e:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_set_cursor_4bit>
 162:	21 2f       	mov	r18, r17
 164:	30 2f       	mov	r19, r16
 166:	c9 01       	movw	r24, r18
 168:	ec 01       	movw	r28, r24
 16a:	02 c0       	rjmp	.+4      	; 0x170 <LCD_send_string_row_column_4bit+0x1e>
 16c:	0e 94 72 00 	call	0xe4	; 0xe4 <LCD_SEND_CHAR_4bit>
 170:	89 91       	ld	r24, Y+
 172:	88 23       	and	r24, r24
 174:	d9 f7       	brne	.-10     	; 0x16c <LCD_send_string_row_column_4bit+0x1a>
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	08 95       	ret

00000180 <__vector_1>:
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	2f 93       	push	r18
 18c:	3f 93       	push	r19
 18e:	8f 93       	push	r24
 190:	9f 93       	push	r25
 192:	ef 93       	push	r30
 194:	ff 93       	push	r31
 196:	80 ed       	ldi	r24, 0xD0	; 208
 198:	97 e0       	ldi	r25, 0x07	; 7
 19a:	28 ec       	ldi	r18, 0xC8	; 200
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	f9 01       	movw	r30, r18
 1a0:	31 97       	sbiw	r30, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <__vector_1+0x20>
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	d9 f7       	brne	.-10     	; 0x19e <__vector_1+0x1e>
 1a8:	97 98       	cbi	0x12, 7	; 18
 1aa:	80 ed       	ldi	r24, 0xD0	; 208
 1ac:	97 e0       	ldi	r25, 0x07	; 7
 1ae:	28 ec       	ldi	r18, 0xC8	; 200
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	f9 01       	movw	r30, r18
 1b4:	31 97       	sbiw	r30, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <__vector_1+0x34>
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	d9 f7       	brne	.-10     	; 0x1b2 <__vector_1+0x32>
 1bc:	80 91 60 00 	lds	r24, 0x0060
 1c0:	90 91 61 00 	lds	r25, 0x0061
 1c4:	01 96       	adiw	r24, 0x01	; 1
 1c6:	90 93 61 00 	sts	0x0061, r25
 1ca:	80 93 60 00 	sts	0x0060, r24
 1ce:	ff 91       	pop	r31
 1d0:	ef 91       	pop	r30
 1d2:	9f 91       	pop	r25
 1d4:	8f 91       	pop	r24
 1d6:	3f 91       	pop	r19
 1d8:	2f 91       	pop	r18
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <main>:
 1e4:	df 92       	push	r13
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	df 93       	push	r29
 1f0:	cf 93       	push	r28
 1f2:	cd b7       	in	r28, 0x3d	; 61
 1f4:	de b7       	in	r29, 0x3e	; 62
 1f6:	2a 97       	sbiw	r28, 0x0a	; 10
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	f8 94       	cli
 1fc:	de bf       	out	0x3e, r29	; 62
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	cd bf       	out	0x3d, r28	; 61
 202:	80 ef       	ldi	r24, 0xF0	; 240
 204:	81 bb       	out	0x11, r24	; 17
 206:	82 bb       	out	0x12, r24	; 18
 208:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_INIT>
 20c:	80 e4       	ldi	r24, 0x40	; 64
 20e:	8b bf       	out	0x3b, r24	; 59
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	85 bf       	out	0x35, r24	; 53
 214:	78 94       	sei
 216:	90 e4       	ldi	r25, 0x40	; 64
 218:	d9 2e       	mov	r13, r25
 21a:	88 ec       	ldi	r24, 0xC8	; 200
 21c:	e8 2e       	mov	r14, r24
 21e:	f1 2c       	mov	r15, r1
 220:	8e 01       	movw	r16, r28
 222:	0f 5f       	subi	r16, 0xFF	; 255
 224:	1f 4f       	sbci	r17, 0xFF	; 255
 226:	82 b3       	in	r24, 0x12	; 18
 228:	8d 25       	eor	r24, r13
 22a:	82 bb       	out	0x12, r24	; 18
 22c:	88 e8       	ldi	r24, 0x88	; 136
 22e:	93 e1       	ldi	r25, 0x13	; 19
 230:	f7 01       	movw	r30, r14
 232:	31 97       	sbiw	r30, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <main+0x4e>
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	d9 f7       	brne	.-10     	; 0x230 <main+0x4c>
 23a:	80 91 60 00 	lds	r24, 0x0060
 23e:	90 91 61 00 	lds	r25, 0x0061
 242:	b8 01       	movw	r22, r16
 244:	4a e0       	ldi	r20, 0x0A	; 10
 246:	50 e0       	ldi	r21, 0x00	; 0
 248:	0e 94 34 01 	call	0x268	; 0x268 <itoa>
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	62 e0       	ldi	r22, 0x02	; 2
 250:	a8 01       	movw	r20, r16
 252:	0e 94 a9 00 	call	0x152	; 0x152 <LCD_send_string_row_column_4bit>
 256:	80 91 60 00 	lds	r24, 0x0060
 25a:	90 91 61 00 	lds	r25, 0x0061
 25e:	08 97       	sbiw	r24, 0x08	; 8
 260:	0c f0       	brlt	.+2      	; 0x264 <main+0x80>
 262:	94 98       	cbi	0x12, 4	; 18
 264:	97 9a       	sbi	0x12, 7	; 18
 266:	df cf       	rjmp	.-66     	; 0x226 <main+0x42>

00000268 <itoa>:
 268:	fb 01       	movw	r30, r22
 26a:	9f 01       	movw	r18, r30
 26c:	e8 94       	clt
 26e:	42 30       	cpi	r20, 0x02	; 2
 270:	c4 f0       	brlt	.+48     	; 0x2a2 <itoa+0x3a>
 272:	45 32       	cpi	r20, 0x25	; 37
 274:	b4 f4       	brge	.+44     	; 0x2a2 <itoa+0x3a>
 276:	4a 30       	cpi	r20, 0x0A	; 10
 278:	29 f4       	brne	.+10     	; 0x284 <itoa+0x1c>
 27a:	97 fb       	bst	r25, 7
 27c:	1e f4       	brtc	.+6      	; 0x284 <itoa+0x1c>
 27e:	90 95       	com	r25
 280:	81 95       	neg	r24
 282:	9f 4f       	sbci	r25, 0xFF	; 255
 284:	64 2f       	mov	r22, r20
 286:	77 27       	eor	r23, r23
 288:	0e 94 65 01 	call	0x2ca	; 0x2ca <__udivmodhi4>
 28c:	80 5d       	subi	r24, 0xD0	; 208
 28e:	8a 33       	cpi	r24, 0x3A	; 58
 290:	0c f0       	brlt	.+2      	; 0x294 <itoa+0x2c>
 292:	89 5d       	subi	r24, 0xD9	; 217
 294:	81 93       	st	Z+, r24
 296:	cb 01       	movw	r24, r22
 298:	00 97       	sbiw	r24, 0x00	; 0
 29a:	a1 f7       	brne	.-24     	; 0x284 <itoa+0x1c>
 29c:	16 f4       	brtc	.+4      	; 0x2a2 <itoa+0x3a>
 29e:	5d e2       	ldi	r21, 0x2D	; 45
 2a0:	51 93       	st	Z+, r21
 2a2:	10 82       	st	Z, r1
 2a4:	c9 01       	movw	r24, r18
 2a6:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <strrev>

000002aa <strrev>:
 2aa:	dc 01       	movw	r26, r24
 2ac:	fc 01       	movw	r30, r24
 2ae:	67 2f       	mov	r22, r23
 2b0:	71 91       	ld	r23, Z+
 2b2:	77 23       	and	r23, r23
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <strrev+0x4>
 2b6:	32 97       	sbiw	r30, 0x02	; 2
 2b8:	04 c0       	rjmp	.+8      	; 0x2c2 <strrev+0x18>
 2ba:	7c 91       	ld	r23, X
 2bc:	6d 93       	st	X+, r22
 2be:	70 83       	st	Z, r23
 2c0:	62 91       	ld	r22, -Z
 2c2:	ae 17       	cp	r26, r30
 2c4:	bf 07       	cpc	r27, r31
 2c6:	c8 f3       	brcs	.-14     	; 0x2ba <strrev+0x10>
 2c8:	08 95       	ret

000002ca <__udivmodhi4>:
 2ca:	aa 1b       	sub	r26, r26
 2cc:	bb 1b       	sub	r27, r27
 2ce:	51 e1       	ldi	r21, 0x11	; 17
 2d0:	07 c0       	rjmp	.+14     	; 0x2e0 <__udivmodhi4_ep>

000002d2 <__udivmodhi4_loop>:
 2d2:	aa 1f       	adc	r26, r26
 2d4:	bb 1f       	adc	r27, r27
 2d6:	a6 17       	cp	r26, r22
 2d8:	b7 07       	cpc	r27, r23
 2da:	10 f0       	brcs	.+4      	; 0x2e0 <__udivmodhi4_ep>
 2dc:	a6 1b       	sub	r26, r22
 2de:	b7 0b       	sbc	r27, r23

000002e0 <__udivmodhi4_ep>:
 2e0:	88 1f       	adc	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	5a 95       	dec	r21
 2e6:	a9 f7       	brne	.-22     	; 0x2d2 <__udivmodhi4_loop>
 2e8:	80 95       	com	r24
 2ea:	90 95       	com	r25
 2ec:	bc 01       	movw	r22, r24
 2ee:	cd 01       	movw	r24, r26
 2f0:	08 95       	ret

000002f2 <_exit>:
 2f2:	f8 94       	cli

000002f4 <__stop_program>:
 2f4:	ff cf       	rjmp	.-2      	; 0x2f4 <__stop_program>
