
arduino_s2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 45 00 	call	0x8a	; 0x8a <main>
  78:	0c 94 66 00 	jmp	0xcc	; 0xcc <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <SPI_SlaveReceive>:
  80:	0d b4       	in	r0, 0x2d	; 45
  82:	07 fe       	sbrs	r0, 7
  84:	fd cf       	rjmp	.-6      	; 0x80 <SPI_SlaveReceive>
  86:	8e b5       	in	r24, 0x2e	; 46
  88:	08 95       	ret

0000008a <main>:
  8a:	52 9a       	sbi	0x0a, 2	; 10
  8c:	5a 98       	cbi	0x0b, 2	; 11
  8e:	24 9a       	sbi	0x04, 4	; 4
  90:	84 b1       	in	r24, 0x04	; 4
  92:	83 7d       	andi	r24, 0xD3	; 211
  94:	84 b9       	out	0x04, r24	; 4
  96:	80 e4       	ldi	r24, 0x40	; 64
  98:	8c bd       	out	0x2c, r24	; 44
  9a:	98 e0       	ldi	r25, 0x08	; 8
  9c:	9e bd       	out	0x2e, r25	; 46
  9e:	0d b4       	in	r0, 0x2d	; 45
  a0:	07 fe       	sbrs	r0, 7
  a2:	fd cf       	rjmp	.-6      	; 0x9e <main+0x14>
  a4:	8e b5       	in	r24, 0x2e	; 46
  a6:	81 34       	cpi	r24, 0x41	; 65
  a8:	11 f4       	brne	.+4      	; 0xae <main+0x24>
  aa:	5a 9a       	sbi	0x0b, 2	; 11
  ac:	f7 cf       	rjmp	.-18     	; 0x9c <main+0x12>
  ae:	5a 98       	cbi	0x0b, 2	; 11
  b0:	f5 cf       	rjmp	.-22     	; 0x9c <main+0x12>

000000b2 <spi_tranceiver>:
  b2:	8e bd       	out	0x2e, r24	; 46
  b4:	0d b4       	in	r0, 0x2d	; 45
  b6:	07 fe       	sbrs	r0, 7
  b8:	fd cf       	rjmp	.-6      	; 0xb4 <spi_tranceiver+0x2>
  ba:	8e b5       	in	r24, 0x2e	; 46
  bc:	08 95       	ret

000000be <SPI_Slave_INIT>:
  be:	24 9a       	sbi	0x04, 4	; 4
  c0:	84 b1       	in	r24, 0x04	; 4
  c2:	83 7d       	andi	r24, 0xD3	; 211
  c4:	84 b9       	out	0x04, r24	; 4
  c6:	80 e4       	ldi	r24, 0x40	; 64
  c8:	8c bd       	out	0x2c, r24	; 44
  ca:	08 95       	ret

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>
